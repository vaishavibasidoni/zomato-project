{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "08afebd0-6861-4621-a732-6cfcdf7f808c",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "87e58e21-d5a8-48e4-af6b-fd12affca9b7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                      name online_order book_table   rate  votes  \\\n",
      "0                    Jalsa          Yes        Yes  4.1/5    775   \n",
      "1           Spice Elephant          Yes         No  4.1/5    787   \n",
      "2          San Churro Cafe          Yes         No  3.8/5    918   \n",
      "3    Addhuri Udupi Bhojana           No         No  3.7/5     88   \n",
      "4            Grand Village           No         No  3.8/5    166   \n",
      "..                     ...          ...        ...    ...    ...   \n",
      "143       Melting Melodies           No         No  3.3/5      0   \n",
      "144        New Indraprasta           No         No  3.3/5      0   \n",
      "145           Anna Kuteera          Yes         No  4.0/5    771   \n",
      "146                 Darbar           No         No  3.0/5     98   \n",
      "147          Vijayalakshmi          Yes         No  3.9/5     47   \n",
      "\n",
      "     approx_cost(for two people) listed_in(type)  \n",
      "0                            800          Buffet  \n",
      "1                            800          Buffet  \n",
      "2                            800          Buffet  \n",
      "3                            300          Buffet  \n",
      "4                            600          Buffet  \n",
      "..                           ...             ...  \n",
      "143                          100          Dining  \n",
      "144                          150          Dining  \n",
      "145                          450          Dining  \n",
      "146                          800          Dining  \n",
      "147                          200          Dining  \n",
      "\n",
      "[148 rows x 7 columns]\n"
     ]
    }
   ],
   "source": [
    "dataframe = pd.read_csv(\"zomato data .csv\")\n",
    "print(dataframe)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "f523616c-6c9d-4b73-bd79-e57ffa29fb8b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>online_order</th>\n",
       "      <th>book_table</th>\n",
       "      <th>rate</th>\n",
       "      <th>votes</th>\n",
       "      <th>approx_cost(for two people)</th>\n",
       "      <th>listed_in(type)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Jalsa</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>4.1/5</td>\n",
       "      <td>775</td>\n",
       "      <td>800</td>\n",
       "      <td>Buffet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Spice Elephant</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>4.1/5</td>\n",
       "      <td>787</td>\n",
       "      <td>800</td>\n",
       "      <td>Buffet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>San Churro Cafe</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>3.8/5</td>\n",
       "      <td>918</td>\n",
       "      <td>800</td>\n",
       "      <td>Buffet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Addhuri Udupi Bhojana</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>3.7/5</td>\n",
       "      <td>88</td>\n",
       "      <td>300</td>\n",
       "      <td>Buffet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Grand Village</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>3.8/5</td>\n",
       "      <td>166</td>\n",
       "      <td>600</td>\n",
       "      <td>Buffet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>143</th>\n",
       "      <td>Melting Melodies</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>3.3/5</td>\n",
       "      <td>0</td>\n",
       "      <td>100</td>\n",
       "      <td>Dining</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>144</th>\n",
       "      <td>New Indraprasta</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>3.3/5</td>\n",
       "      <td>0</td>\n",
       "      <td>150</td>\n",
       "      <td>Dining</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>145</th>\n",
       "      <td>Anna Kuteera</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>4.0/5</td>\n",
       "      <td>771</td>\n",
       "      <td>450</td>\n",
       "      <td>Dining</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>146</th>\n",
       "      <td>Darbar</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>3.0/5</td>\n",
       "      <td>98</td>\n",
       "      <td>800</td>\n",
       "      <td>Dining</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>147</th>\n",
       "      <td>Vijayalakshmi</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>3.9/5</td>\n",
       "      <td>47</td>\n",
       "      <td>200</td>\n",
       "      <td>Dining</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>148 rows Ã— 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                      name online_order book_table   rate  votes  \\\n",
       "0                    Jalsa          Yes        Yes  4.1/5    775   \n",
       "1           Spice Elephant          Yes         No  4.1/5    787   \n",
       "2          San Churro Cafe          Yes         No  3.8/5    918   \n",
       "3    Addhuri Udupi Bhojana           No         No  3.7/5     88   \n",
       "4            Grand Village           No         No  3.8/5    166   \n",
       "..                     ...          ...        ...    ...    ...   \n",
       "143       Melting Melodies           No         No  3.3/5      0   \n",
       "144        New Indraprasta           No         No  3.3/5      0   \n",
       "145           Anna Kuteera          Yes         No  4.0/5    771   \n",
       "146                 Darbar           No         No  3.0/5     98   \n",
       "147          Vijayalakshmi          Yes         No  3.9/5     47   \n",
       "\n",
       "     approx_cost(for two people) listed_in(type)  \n",
       "0                            800          Buffet  \n",
       "1                            800          Buffet  \n",
       "2                            800          Buffet  \n",
       "3                            300          Buffet  \n",
       "4                            600          Buffet  \n",
       "..                           ...             ...  \n",
       "143                          100          Dining  \n",
       "144                          150          Dining  \n",
       "145                          450          Dining  \n",
       "146                          800          Dining  \n",
       "147                          200          Dining  \n",
       "\n",
       "[148 rows x 7 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataframe\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "b15a0ee7-f015-46de-a3ce-ae923b6b7775",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                    name online_order book_table  rate  votes  \\\n",
      "0                  Jalsa          Yes        Yes   4.1    775   \n",
      "1         Spice Elephant          Yes         No   4.1    787   \n",
      "2        San Churro Cafe          Yes         No   3.8    918   \n",
      "3  Addhuri Udupi Bhojana           No         No   3.7     88   \n",
      "4          Grand Village           No         No   3.8    166   \n",
      "\n",
      "   approx_cost(for two people) listed_in(type)  \n",
      "0                          800          Buffet  \n",
      "1                          800          Buffet  \n",
      "2                          800          Buffet  \n",
      "3                          300          Buffet  \n",
      "4                          600          Buffet  \n"
     ]
    }
   ],
   "source": [
    "def handlerate(value):\n",
    "    value = str(value).split('/')\n",
    "    value = value[0];\n",
    "    return float(value)\n",
    "dataframe['rate'] = dataframe['rate'].apply(handlerate)\n",
    "print(dataframe.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "65c4ca84-26ca-43be-9367-d82e94315813",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 148 entries, 0 to 147\n",
      "Data columns (total 7 columns):\n",
      " #   Column                       Non-Null Count  Dtype  \n",
      "---  ------                       --------------  -----  \n",
      " 0   name                         148 non-null    object \n",
      " 1   online_order                 148 non-null    object \n",
      " 2   book_table                   148 non-null    object \n",
      " 3   rate                         148 non-null    float64\n",
      " 4   votes                        148 non-null    int64  \n",
      " 5   approx_cost(for two people)  148 non-null    int64  \n",
      " 6   listed_in(type)              148 non-null    object \n",
      "dtypes: float64(1), int64(2), object(4)\n",
      "memory usage: 8.2+ KB\n"
     ]
    }
   ],
   "source": [
    "dataframe.info()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "d839d229-316a-4377-89af-87b0b020266e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>online_order</th>\n",
       "      <th>book_table</th>\n",
       "      <th>rate</th>\n",
       "      <th>votes</th>\n",
       "      <th>approx_cost(for two people)</th>\n",
       "      <th>listed_in(type)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Jalsa</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>4.1</td>\n",
       "      <td>775</td>\n",
       "      <td>800</td>\n",
       "      <td>Buffet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Spice Elephant</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>4.1</td>\n",
       "      <td>787</td>\n",
       "      <td>800</td>\n",
       "      <td>Buffet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>San Churro Cafe</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>3.8</td>\n",
       "      <td>918</td>\n",
       "      <td>800</td>\n",
       "      <td>Buffet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Addhuri Udupi Bhojana</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>3.7</td>\n",
       "      <td>88</td>\n",
       "      <td>300</td>\n",
       "      <td>Buffet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Grand Village</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>3.8</td>\n",
       "      <td>166</td>\n",
       "      <td>600</td>\n",
       "      <td>Buffet</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                    name online_order book_table  rate  votes  \\\n",
       "0                  Jalsa          Yes        Yes   4.1    775   \n",
       "1         Spice Elephant          Yes         No   4.1    787   \n",
       "2        San Churro Cafe          Yes         No   3.8    918   \n",
       "3  Addhuri Udupi Bhojana           No         No   3.7     88   \n",
       "4          Grand Village           No         No   3.8    166   \n",
       "\n",
       "   approx_cost(for two people) listed_in(type)  \n",
       "0                          800          Buffet  \n",
       "1                          800          Buffet  \n",
       "2                          800          Buffet  \n",
       "3                          300          Buffet  \n",
       "4                          600          Buffet  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataframe.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "58881874-cfd4-43e0-8163-d7d0dc16306f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, ' type of resturent')"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(x=dataframe['listed_in(type)'])\n",
    "plt.xlabel(\" type of resturent\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "1b9894ac-e0dc-4890-9e7d-8a0baf9f61fb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>online_order</th>\n",
       "      <th>book_table</th>\n",
       "      <th>rate</th>\n",
       "      <th>votes</th>\n",
       "      <th>approx_cost(for two people)</th>\n",
       "      <th>listed_in(type)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Jalsa</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>4.1</td>\n",
       "      <td>775</td>\n",
       "      <td>800</td>\n",
       "      <td>Buffet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Spice Elephant</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>4.1</td>\n",
       "      <td>787</td>\n",
       "      <td>800</td>\n",
       "      <td>Buffet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>San Churro Cafe</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>3.8</td>\n",
       "      <td>918</td>\n",
       "      <td>800</td>\n",
       "      <td>Buffet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Addhuri Udupi Bhojana</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>3.7</td>\n",
       "      <td>88</td>\n",
       "      <td>300</td>\n",
       "      <td>Buffet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Grand Village</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>3.8</td>\n",
       "      <td>166</td>\n",
       "      <td>600</td>\n",
       "      <td>Buffet</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                    name online_order book_table  rate  votes  \\\n",
       "0                  Jalsa          Yes        Yes   4.1    775   \n",
       "1         Spice Elephant          Yes         No   4.1    787   \n",
       "2        San Churro Cafe          Yes         No   3.8    918   \n",
       "3  Addhuri Udupi Bhojana           No         No   3.7     88   \n",
       "4          Grand Village           No         No   3.8    166   \n",
       "\n",
       "   approx_cost(for two people) listed_in(type)  \n",
       "0                          800          Buffet  \n",
       "1                          800          Buffet  \n",
       "2                          800          Buffet  \n",
       "3                          300          Buffet  \n",
       "4                          600          Buffet  "
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataframe.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "ac8f6c02-8164-4342-938b-4ac79b99c553",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'type of restaurant')"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "grouped_data = dataframe.groupby('listed_in(type)')['votes'].sum()\n",
    "result = pd.DataFrame({'votes': grouped_data})  \n",
    "plt.plot(result, c=\"green\", marker=\"o\")\n",
    "plt.xlabel(\"type of restaurant\", c=\"red\", size=20) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "b4d28958-96dc-451e-a5d1-9ac9537b7d5b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>online_order</th>\n",
       "      <th>book_table</th>\n",
       "      <th>rate</th>\n",
       "      <th>votes</th>\n",
       "      <th>approx_cost(for two people)</th>\n",
       "      <th>listed_in(type)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Jalsa</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>4.1</td>\n",
       "      <td>775</td>\n",
       "      <td>800</td>\n",
       "      <td>Buffet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Spice Elephant</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>4.1</td>\n",
       "      <td>787</td>\n",
       "      <td>800</td>\n",
       "      <td>Buffet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>San Churro Cafe</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>3.8</td>\n",
       "      <td>918</td>\n",
       "      <td>800</td>\n",
       "      <td>Buffet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Addhuri Udupi Bhojana</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>3.7</td>\n",
       "      <td>88</td>\n",
       "      <td>300</td>\n",
       "      <td>Buffet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Grand Village</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>3.8</td>\n",
       "      <td>166</td>\n",
       "      <td>600</td>\n",
       "      <td>Buffet</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                    name online_order book_table  rate  votes  \\\n",
       "0                  Jalsa          Yes        Yes   4.1    775   \n",
       "1         Spice Elephant          Yes         No   4.1    787   \n",
       "2        San Churro Cafe          Yes         No   3.8    918   \n",
       "3  Addhuri Udupi Bhojana           No         No   3.7     88   \n",
       "4          Grand Village           No         No   3.8    166   \n",
       "\n",
       "   approx_cost(for two people) listed_in(type)  \n",
       "0                          800          Buffet  \n",
       "1                          800          Buffet  \n",
       "2                          800          Buffet  \n",
       "3                          300          Buffet  \n",
       "4                          600          Buffet  "
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataframe.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "4ea82d17-fcdd-4fbe-a7e0-50f4365709b2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(dataframe['rate'],bins =5)\n",
    "plt.title(\" ratings distribution\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "ea92c1a9-4102-4f09-9c3d-31e33cfa0a44",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>online_order</th>\n",
       "      <th>book_table</th>\n",
       "      <th>rate</th>\n",
       "      <th>votes</th>\n",
       "      <th>approx_cost(for two people)</th>\n",
       "      <th>listed_in(type)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Jalsa</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>4.1</td>\n",
       "      <td>775</td>\n",
       "      <td>800</td>\n",
       "      <td>Buffet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Spice Elephant</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>4.1</td>\n",
       "      <td>787</td>\n",
       "      <td>800</td>\n",
       "      <td>Buffet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>San Churro Cafe</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>3.8</td>\n",
       "      <td>918</td>\n",
       "      <td>800</td>\n",
       "      <td>Buffet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Addhuri Udupi Bhojana</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>3.7</td>\n",
       "      <td>88</td>\n",
       "      <td>300</td>\n",
       "      <td>Buffet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Grand Village</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>3.8</td>\n",
       "      <td>166</td>\n",
       "      <td>600</td>\n",
       "      <td>Buffet</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                    name online_order book_table  rate  votes  \\\n",
       "0                  Jalsa          Yes        Yes   4.1    775   \n",
       "1         Spice Elephant          Yes         No   4.1    787   \n",
       "2        San Churro Cafe          Yes         No   3.8    918   \n",
       "3  Addhuri Udupi Bhojana           No         No   3.7     88   \n",
       "4          Grand Village           No         No   3.8    166   \n",
       "\n",
       "   approx_cost(for two people) listed_in(type)  \n",
       "0                          800          Buffet  \n",
       "1                          800          Buffet  \n",
       "2                          800          Buffet  \n",
       "3                          300          Buffet  \n",
       "4                          600          Buffet  "
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataframe.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "da909b55-dc4b-4a00-a4d9-3c4a1113ad07",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='approx_cost(for two people)', ylabel='count'>"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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ypV+Y2bMmKG2bdsqMjJS7du319///ne/7R6PRzNmzFBmZqaioqKUlpamV199tcre8vLylJmZqejoaCUmJuqGG27Q999/7zdmyJAhmj17dpX7AerESX3FJAA/r776qr322mtWUFBgK1assCFDhlh6erqVlpaamVlhYaFJshYtWtirr75qX331ld18883WuHFj+/77783sv9+S3rFjR5s/f76tWrXKfvazn1nr1q3t8OHDZmY2c+ZMi4iIsF69etmiRYtszZo1tn//frv88sutY8eO9tFHH1lubq4NHDjQ2rVr57vf22+/bREREbZs2TIrLi62tLQ0+81vflOjub311lsWFhZmDz74oH311VeWm5trv/vd73zbq6s9ePBgu/TSS23VqlW2fv16e/PNNy0nJ8eOHj1qr732mu/bjrds2eL7xtw777zTBg0a5Ktx9OhR27Jli8XExNiTTz5pW7ZssQMHDtjmzZutUaNGdvvtt9vq1attzpw5FhcXZ5MmTfLd96KLLrLo6GgbP368rVmzxtasWVNujnv37rVrr73WBg0aZFu2bLEtW7ZYSUmJPfXUU9a5c2ffuHPOOcfi4uJsxowZZmb2ySefWEREhO3fv9/Xd0pKir3zzjv25ZdfWlZWljVt2tR27txZ6e83NTXVGjdubNOmTbP8/Hx76qmnLCwszO+b3QcMGGBDhgyxZcuW2dq1a+2uu+6y5s2b+/b7+uuvW0REhE2fPt3y8/Pt8ccft7CwMPvwww99+5BkzZs3t2effdby8/Pt/vvvt7CwMPvqq6/M7L9/oytWrDAzs927d1t8fLxNnDjRVq9ebf/5z3/s0ksvtYsvvtiv/3fffdciIyPt0KFDlc4RqAsEGSCAduzYYZLsiy++MLP/Pkn8/ve/9405cuSItWjRwh599FEz+2+QmT17tm/Mzp07LSoqyv71r3+Z2Q9BRpLl5ub6xqxdu9Yk2aJFi3zrvv/+e4uKirKXX37Zt+7222+3s88+237xi19Yenp6jZ94MjIybPjw4RVuq0nt9PR0e+ihhyq8/7E5796922/90KFDbeTIkeXGx8bG2syZM32377vvPmvfvr2VlZX51k2fPt2io6N9IfKiiy6yc889t9p5ZmVl2dChQ/3WrVq1yjwej23fvt127dplkZGRNmXKFLvuuuvMzOyRRx6xXr16mZnZvn37LCIiwl588UXf/Q8fPmwpKSn2hz/8odK6qampfqHNzOy6666zzMxMMzP7+OOPLSYmptzxatu2rf3lL38xM7NevXrZLbfc4rf9mmuusZ/+9Ke+25Ls1ltv9RvTs2dPu+2228ysfJCZMmWKXXbZZX7jN23a5Auex6xcudIk2YYNGyqdI1AXeGkJOAUFBQUaNmyY0tLSFBMT47tAdePGjX7jMjIyfD+Hh4fr/PPP1+rVqysd06xZM7Vv395vTGRkpLp27eq7vXr1aoWHh6tnz56+dc2bNy93v//5n//R0aNH9corr+jFF1+U1+ut0dxyc3PVv3//CrfVpPadd96pRx55RL1799akSZO0atWqamsePHhQDRs2rHbc6tWrlZGRIY/H41vXu3dv7du3T5s3b/at6969e7X7qkiXLl3UrFkz5eTk6OOPP9a5556rn/3sZ76XBHNyctSvXz9JP1y/c+TIEfXu3dt3/4iICPXo0aPcMT7R8cf82O1j91m5cqX27dun5s2bKzo62rcUFhb6Xr5cvXq1X91jv4eq/rZOrHOilStXauHChX41O3To4JvrMVFRUZJ+uK4JqE/h9d0A4LIhQ4YoNTVVzz77rFJSUlRWVqYuXboE5cLSqKgovyfumlq/fr2+++47lZWVacOGDUpPT69xvVNx8803a+DAgXr77bc1f/58TZs2TY8//rjuuOOOSu8TFxen3bt3n1Ld451xxhm1up/H41Hfvn2VnZ0tr9erfv36qWvXriopKVFeXp4+/fRT3X333QHrsyL79u1TcnKysrOzy22r7QXPNa07ZMgQPfroo+W2JScn+37etWuXJCk+Pj5ovQA1wRkZoJZ27typ/Px83X///erfv786duxY6ZPwZ5995vv56NGjWr58uTp27FjpmN27d2vt2rXlxhyvY8eOOnr0qJYsWVKup06dOkn64aLUX/7yl7ruuus0ZcoU3Xzzzdq+fXuN5te1a9dKLwquSW1JatmypW699Va9/vrruuuuu/Tss89K+uHskvTDu6+Od+655+qrr76qtreOHTtq8eLFMjPfukWLFqlx48Zq0aJFjeZ3TGRkZLk+JOmiiy5Sdna2srOz1a9fPzVo0EB9+/bVY489ppKSEt+ZkGMX2i5atMh33yNHjmjZsmV+v4uKHH/Mj90+dszPO+88bd26VeHh4WrXrp3fEhcX5/s9HF/32O/hxLpV1TnReeedpy+//FKtW7cuV/f4YJiXl6cWLVr4egHqTX2/tgW4qrS01Jo3b26//OUvraCgwBYsWGAXXHCBSbI5c+aY2X+vP2jVqpW9/vrrtnr1avv1r39t0dHRtmPHDjP77/UinTt3tg8++MC++OILu/zyy61Vq1ZWUlJiZj9cIxMbG1uuh6FDh1qnTp3s448/ttzcXBs0aJDfBbd33323tW7d2vbs2WOlpaXWp08fGzx4cI3mt3DhQmvQoIHvYt9Vq1b5XetTXe0xY8bYvHnz7Ouvv7bly5dbz5497dprrzUzs82bN5vH47FZs2bZ9u3bbe/evWb2w7Up4eHhtmvXLr9eTrxG5tjFvqNGjbLVq1fb3LlzK7zYd8yYMdXOc+rUqdaqVStbs2aN7dixw9d/bm6ueTwe83q9vv6eeOIJCwsLswsvvNBvH2PGjLGUlBR79913/S72PXEex0tNTbWYmBh79NFHLT8/3/73f//XwsLCbN68eWZmVlZWZn369LFu3brZe++9Z4WFhbZo0SK77777bNmyZWZmNmfOHIuIiLCnn37a1q5d67vYd+HChb46kiwuLs6ee+45y8/PtwcffNAaNGhgX375pZmVv0bm22+/tfj4ePv5z39uS5cutXXr1tm8efNsxIgRdvToUd9+s7KyKryeCahrBBngFLz//vvWsWNH83q91rVrV8vOzq4wyLz00kvWo0cPi4yMtE6dOvm9q+RYkHnzzTetc+fOFhkZaT169LCVK1f6xlQWZHbt2mU33HCDxcbGWlRUlA0cONDWrl3r2294eLh9/PHHvvGFhYUWExNjTz/9dI3m99prr9k555xjkZGRFhcXZ1dddVWNapuZjR492tq2bWter9fi4+Pthhtu8L1Ty8zs4YcftqSkJPN4PJaVleVb36NHD3vmmWf8+jgxyJiZZWdn2wUXXGCRkZGWlJRkEyZMsCNHjvi21zTIbN++3S699FKLjo42Sb4QUFpaak2bNrWePXv6xq5YscIk2b333uu3j4MHD9odd9xhcXFx5vV6rXfv3rZ06dIq66amptrkyZPtmmuusUaNGllSUpL96U9/8htTXFxsd9xxh6WkpFhERIS1bNnShg8fbhs3bvSNefrppy0tLc0iIiLs7LPPthdeeMFvH5Js+vTpdumll5rX67XWrVv7LiI3Kx9kzH64mPvKK6+0Jk2aWFRUlHXo0MHGjh3ru7j64MGDFhsba4sXL6729wsEm8fsuHOzAAJqw4YNatOmjVasWKFzzjmnwjHZ2dm6+OKLtXv37qBe++CKt99+W+PHj1deXp4aNDh9X/1u3bq1xo4dq7Fjxwa1jsfj0Zw5cwL66cUzZszQnDlzNH/+/IDtE6gtLvYFEFIGDx6sgoICffvtt2rZsmV9t4MKRERE6M9//nN9twFIIsgAP1qdO3fWN998U+G2v/zlLxo+fHgdd/RfwT5LgVNz880313cLgA8vLQE/Ut98842OHDlS4bbExEQ1bty4jjsCgJNHkAEAAM46fa+kAwAApz2CDAAAcBZBBgAAOIsgAwAAnEWQAQAAziLIAAAAZxFkAACAswgyAADAWf8PDymlvWvT37IAAAAASUVORK5CYII=",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "couple_data=dataframe['approx_cost(for two people)']\n",
    "sns.countplot(x=couple_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "98004b58-d356-484b-93ce-42adb0010b19",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>online_order</th>\n",
       "      <th>book_table</th>\n",
       "      <th>rate</th>\n",
       "      <th>votes</th>\n",
       "      <th>approx_cost(for two people)</th>\n",
       "      <th>listed_in(type)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Jalsa</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>4.1</td>\n",
       "      <td>775</td>\n",
       "      <td>800</td>\n",
       "      <td>Buffet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Spice Elephant</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>4.1</td>\n",
       "      <td>787</td>\n",
       "      <td>800</td>\n",
       "      <td>Buffet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>San Churro Cafe</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>3.8</td>\n",
       "      <td>918</td>\n",
       "      <td>800</td>\n",
       "      <td>Buffet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Addhuri Udupi Bhojana</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>3.7</td>\n",
       "      <td>88</td>\n",
       "      <td>300</td>\n",
       "      <td>Buffet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Grand Village</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>3.8</td>\n",
       "      <td>166</td>\n",
       "      <td>600</td>\n",
       "      <td>Buffet</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                    name online_order book_table  rate  votes  \\\n",
       "0                  Jalsa          Yes        Yes   4.1    775   \n",
       "1         Spice Elephant          Yes         No   4.1    787   \n",
       "2        San Churro Cafe          Yes         No   3.8    918   \n",
       "3  Addhuri Udupi Bhojana           No         No   3.7     88   \n",
       "4          Grand Village           No         No   3.8    166   \n",
       "\n",
       "   approx_cost(for two people) listed_in(type)  \n",
       "0                          800          Buffet  \n",
       "1                          800          Buffet  \n",
       "2                          800          Buffet  \n",
       "3                          300          Buffet  \n",
       "4                          600          Buffet  "
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataframe.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "e2220420-8f35-47f5-b93d-96f297a833d5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='online_order', ylabel='rate'>"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize =(6,6))\n",
    "sns.boxplot(x = 'online_order', y = 'rate',data = dataframe)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "5a196a8c-db7c-4e1e-93ee-af1fd8f4dac8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>online_order</th>\n",
       "      <th>book_table</th>\n",
       "      <th>rate</th>\n",
       "      <th>votes</th>\n",
       "      <th>approx_cost(for two people)</th>\n",
       "      <th>listed_in(type)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Jalsa</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>4.1</td>\n",
       "      <td>775</td>\n",
       "      <td>800</td>\n",
       "      <td>Buffet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Spice Elephant</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>4.1</td>\n",
       "      <td>787</td>\n",
       "      <td>800</td>\n",
       "      <td>Buffet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>San Churro Cafe</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>3.8</td>\n",
       "      <td>918</td>\n",
       "      <td>800</td>\n",
       "      <td>Buffet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Addhuri Udupi Bhojana</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>3.7</td>\n",
       "      <td>88</td>\n",
       "      <td>300</td>\n",
       "      <td>Buffet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Grand Village</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>3.8</td>\n",
       "      <td>166</td>\n",
       "      <td>600</td>\n",
       "      <td>Buffet</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                    name online_order book_table  rate  votes  \\\n",
       "0                  Jalsa          Yes        Yes   4.1    775   \n",
       "1         Spice Elephant          Yes         No   4.1    787   \n",
       "2        San Churro Cafe          Yes         No   3.8    918   \n",
       "3  Addhuri Udupi Bhojana           No         No   3.7     88   \n",
       "4          Grand Village           No         No   3.8    166   \n",
       "\n",
       "   approx_cost(for two people) listed_in(type)  \n",
       "0                          800          Buffet  \n",
       "1                          800          Buffet  \n",
       "2                          800          Buffet  \n",
       "3                          300          Buffet  \n",
       "4                          600          Buffet  "
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataframe.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "4c9405c1-b7f8-4a36-a263-5d3ee36724f0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "pivot_table = dataframe.pivot_table(index='listed_in(type)', columns='online_order', aggfunc='size', fill_value=0)\n",
    "sns.heatmap(pivot_table, annot=True, cmap=\"YlGnBu\", fmt='d')\n",
    "plt.title(\"Heatmap\")\n",
    "plt.xlabel(\"Online Order\")\n",
    "plt.ylabel(\"Listed In (Type)\")\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3fbd3971-5d31-4086-95bc-400ee8210208",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
